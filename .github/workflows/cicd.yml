name: Deploy App to Azure App Services
on:
  push:
    branches:
      - master
      - dev
      - feature/**
      - bug/**
      - release/**
  pull_request:
    branches:
      - master
      - dev
      - feature/**
      - bug/**
      - release/**
jobs: #collection of jobs
  set-environment: #this is a job named 'set-environment'
    runs-on: ubuntu-latest #your preferred OS
    outputs: #the env value needs to be exposed as an output in order to be reached from other jobs
      current_env: ${{ steps.set_env.outputs.current_env }} #output variable to store the relevant environment
    steps:
      - name: Check if prod
        if: endsWith(github.ref, '/master') #if the triggering branch is 'main'
        run: |
          echo "ENVIRONMENT_NAME=PROD" >> $GITHUB_ENV #retrieve secrets from 'prod' environment in Github
      - name: Check if dev
        if: endsWith(github.ref, '/dev') #if the triggering branch is 'dev'
        run: |
          echo "ENVIRONMENT_NAME=DEV" >> $GITHUB_ENV #retrieve secrets from 'dev' environment in Github
      - name: Set output
        id: set_env
        run: echo "current_env=${{ env.ENVIRONMENT_NAME }}" >> $GITHUB_OUTPUT #assign the value of ENVIRONMENT_NAME to the output variable 'current_env'       
  
  build: #this is a job named 'build-and-deploy':
    runs-on: ubuntu-latest
    needs: set-environment #this job won't be executed until the set-environment job is finished
    environment: ${{ needs.set-environment.outputs.current_env }} #this job will now retrieve secret values stored in either 'dev' or 'prod' repo environments, depending on the value set in previous job
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        run: mvn clean install -DskipTests
      - name: Upload Artifacct for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: springboot-example
          path: ${{ github.workspace }}/target/*.jar
  deploy:
    runs-on: ubuntu-latest
    needs: build #this job won't be executed until the set-environment job is finished
    #environment: ${{ steps.set_env.outputs.current_env }} #this job will now retrieve secret values stored in either 'dev' or 'prod' repo environments, depending on the value set in previous job
    steps:
      - name: Download Artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: springboot-example
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name:  ${{ secrets.APP_NAME }}
          publish-profile: ${{ secrets.AZUREWEBAPPPUBLISHPROFILE }}
          package: '*.jar'
      - run: echo "Deploying to ${{ steps.set_env.outputs.current_env }} environment" #output: "Deploying to {environment name}"
